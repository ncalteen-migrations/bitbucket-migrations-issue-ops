name: Delete Repositories

on:
  issue_comment:
    types: [created]

jobs:
  delete-bitbucket-server:
    name: Delete repositories migrated from Bitbucket Server
    runs-on: ubuntu-latest

    if: |
      github.event_name == 'issue_comment' &&
      startsWith(github.event.comment.body, '/delete-repositories') &&
      contains(toJson(github.event.issue.labels.*.name), 'bitbucket-server')

    defaults:
      run:
        working-directory: tools/ghec-importer

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Get migration GUID
        uses: actions/github-script@v6
        id: migration-guid
        with:
          script: |
            const regex = /\/delete-repositories ([^ ]+)/

            const match = context.payload.comment.body.trim().match(regex)

            if (match) {
              core.info('migration-guid', match[1])
              return match[1]
            }

      # Avoid husky from running and failing (.git can't be found) by clearing
      # prepare script npm set-script needs npm > v7
      - name: Install dependencies
        run: |
          npm install -g npm@8
          npm set-script prepare ""
          npm ci --omit=dev

      - name: Link GHEC Importer
        run: npm link

      - name: Delete repositories
        run:
          ghec-importer delete-imported --guid ${{
          steps.migration-guid.outputs.result }} --yes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GHEC_IMPORTER_ADMIN_TOKEN: ${{ secrets.GHEC_ADMIN_TOKEN }}
          GHEC_IMPORTER_TARGET_ORGANIZATION:
            ${{ vars.GHEC_TARGET_ORGANIZATION }}

          # Terminate process with non-zero exit code if file system operations
          # fail (https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode)
          NODE_OPTIONS: --unhandled-rejections=strict

      - if: ${{ failure() }}
        name: Report failed deletion
        uses: actions/github-script@v6
        with:
          script: |
            const body = `:no_entry: **Repository deletion failed.** [View workflow run for details](${context.payload.repository.html_url}/actions/runs/${context.runId})`

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            })

      - if: ${{ success() }}
        name: Add success comment
        uses: actions/github-script@v6
        with:
          script: |
            let body = 'Repositories deleted successfully!'

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            })

  delete-bitbucket-cloud:
    name: Delete repositories migrated from Bitbucket Cloud
    runs-on: ubuntu-latest

    if: |
      github.event_name == 'issue_comment' &&
      startsWith(github.event.comment.body, '/delete-repositories') &&
      contains(toJson(github.event.issue.labels.*.name), 'bitbucket-cloud')

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Parse repositories from issue body
        id: parse
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs')
            const parse = require('./.github/scripts/parse-issue-body.js')

            const options = {}
            const parsedIssueBody = parse({github, context, core, options})

            fs.writeFileSync('./repositories.txt', parsedIssueBody.repositories.trim())

      - name: Delete repositories
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GHEC_ADMIN_TOKEN }}
          script: |
            const deleteRepos = require('./.github/scripts/delete-repos.js')

            const options = {
              targetOrganization: '${{ vars.GHEC_TARGET_ORGANIZATION }}',
              repositories: ${{ steps.parse.outputs.repositories-json }}
            }

            await deleteRepos({github, context, core, options})

      - if: ${{ failure() }}
        name: Report failed deletion
        uses: actions/github-script@v6
        with:
          script: |
            const body = `:no_entry: **Repository deletion failed.** [View workflow run for details](${context.payload.repository.html_url}/actions/runs/${context.runId})`

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            })

      - if: ${{ success() }}
        name: Add success comment
        uses: actions/github-script@v6
        with:
          script: |
            let body = 'Repositories deleted successfully!'

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            })
